/*  code to find frequency of charecters in a given string  */

#include <stdio.h>

int main()
{
    char s[100],f[100];
    int size=0,i,j,count;
    printf("enter the string");
    scanf("%s",s);
    for(i=0;s[i]!='\0';i++)
    {
        f[i]=-1;
        size++;
    }
    for(i=0;i<size;i++)
    {
        count=1;
        for(j=i+1;j<size;j++)
        {
            if(s[i]==s[j])
            {
                count++;
                f[j]=0;
            }    
        }
        if(f[i]!=0)
        {
            f[i]=count;
        }
    }
    for(i=0;i<size;i++)
    {
        if(f[i]!=0)
        {
            printf("%c occurs %d times\n",s[i],f[i]);
        }
    }
    

    return 0;
}


----------------------------------------------------------------------------------------------------------------------------------------


/*  code to check whether two strings are anagrams   */

#include<stdio.h>
#include<string.h>
int main()
{
    char str1[20], str2[20];
    int len, len1, len2, i, j, flag0=0, flag1=0;
    printf("Enter first string: ");
    scanf("%s",str1);
    printf("Enter second string: ");
    scanf("%s",str2);
    len1 = strlen(str1);
    len2 = strlen(str2);
    if(len1 == len2)
    {
        len = len1;
        for(i=0; i<len; i++)
        {
            flag0 = 0;
            for(j=0; j<len; j++)
            {
                if(str1[i] == str2[j])
                {
                    flag0 = 1;
                    break;
                }
            }
            if(flag0 == 0)
            {
                flag1 = 1;
                break;
            }
        }
        if(flag1 == 1)
            printf("\nStrings are not Anagram");
        else
            printf("\nStrings are Anagram");
    }
   
    return 0;
}

----------------------------------------------------------------------------------------------------------------------------------------


/*  code to reverse all the consonants in a given string */

#include <stdio.h>

int main()
{  int i,j,k;char str[100],str1[100],str2[100],str3[100];
    printf("enter the string");
    scanf("%s",str);
    for(i=0;str[i]!='\0';i++)
    {
        if(str[i]=='a'||str[i]=='e'||str[i]=='i'||str[i]=='o'||str[i]=='u')
        {
            str1[j]=str[i];
            j++;
        }
        else
        {
            str2[k]=str[i];
            k++;
        }
    }
    for(i=0;i<k;i++)
    {
        str3[i]=str2[k-i-1];
    }
    j=0;
     for(i=0;str[i]!='\0';i++)
    {
        if(str[i]=='a'||str[i]=='e'||str[i]=='i'||str[i]=='o'||str[i]=='u')
        {
        }
        else
        {
            str[i]=str3[j];
            j++;
        }
    }
    printf("%s",str);

    return 0;
}

----------------------------------------------------------------------------------------------------------------------------------------


/*  gcd of two numbers(recursive way)  */

#include <stdio.h>
int gcd(int a,int b)
{  
    if(a==0)
    return b;
    else
    return gcd(b%a,a);
   
}
int main()
{   int a,b;
    scanf("%d",&a);
    scanf("%d",&b);
    int x=gcd(a,b);
    printf("%d",x);
    return 0;
}

----------------------------------------------------------------------------------------------------------------------------------------

/*gcd of 2 numbers (iterative way) */

#include <stdio.h>

int main()
{
     int a,b,i;
     printf("enter 2 numbers");
     scanf("%d %d",&a,&b);
     if(a<b)
     i=a;
     else
     i=b;
     while(i>0)
     {
         if(a%i==0 && b%i==0)
         {
             printf("%d",i);
             break;
         }
         else
         i--;
     }
    return 0;
}

----------------------------------------------------------------------------------------------------------------------------------------

/* code to find nth node ina linked list from the end */

#include<stdio.h>
#include<stdlib.h>
struct node
{
    int data;
    struct node * next;
};
struct node*addNode(struct node*h)
{
    struct node*newnode=(struct node*)malloc(sizeof(struct node));
    newnode->next=NULL;
    scanf("%d",&newnode->data);
    h->next=newnode;
    return newnode;
}
void display(struct node*head)
{
    while(head!=NULL)
    {
        printf("%d",head->data);
        head=head->next;
    }
}
void find(struct node * head,int n,int s)
{
    int y=s-n+1;
    struct node * temp=head;
    while(y-1>0)
    {
       temp=temp->next;
       y=y-1;
    }
    printf("%d",temp->data);
}
int main()
{
    struct node*head;
    struct node*tail;
    int size,x,s;
    scanf("%d",&size);s=size;
    head=(struct node*)malloc(sizeof(struct node));
    tail=head;
    printf("enter");
    head->next=NULL;
    scanf("%d",&head->data);
    size--;
    while(size>0)
    {
        tail=addNode(tail);
        size--;
    }
    printf("enter the node number from end");
    scanf("%d",&x);
    find(head,x,s);
    return 0;
}

----------------------------------------------------------------------------------------------------------------------------------------

